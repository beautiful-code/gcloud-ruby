# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

require "minitest/autorun"
require "minitest/spec"

require "google/gax"

require "google/cloud/talent"
require "google/cloud/talent/<%= version %>/helpers"

<%=
  output = []
  services = class_methods.keys.sort
  services.each do |service|
    output << "require \"google/cloud/talent/#{version}/#{service.downcase}_service_client\""
  end
  output.join("\n")
%>

class HelperMockTalentCredentials_<%= version %> < Google::Cloud::Talent::<%= version.capitalize %>::Credentials
  def initialize
  end

  def updater_proc
    proc do
      raise "The client was trying to make a grpc request. This should not " \
          "happen since the grpc layer is being mocked."
    end
  end
end

<%=
  output = []
  services = class_methods.keys.sort
  services.each do |service|
    output << "describe Google::Cloud::Talent::#{version.capitalize}::#{service}ServiceClient do"
    output << "  let(:mock_credentials) { HelperMockTalentCredentials_#{version}.new }"
    output << ""
    methods = class_methods[service].keys.sort
    methods.each do |method|
      params = class_methods[service][method]
      helper_params = class_methods[service][method].map(&:to_s).join(", ")
      
      output << "  describe \"the #{method} instance method\" do"
      
      output << "    it \"correctly calls Google::Cloud::Talent::#{version.capitalize}::#{service}ServiceClient.#{method}\" do"
      output << "      Google::Cloud::Talent::#{version.capitalize}::Credentials.stub(:default, mock_credentials) do"
      params.each do |param|
        output << "        #{param} = \"#{param}\""
      end
      output << "        client = Google::Cloud::Talent::#{service}Service.new version: :#{version}"
      output << "        assert_equal("
      output << "          client.#{method}(#{params.map(&:to_s).join(", ")}),"
      output << "          Google::Cloud::Talent::#{version.capitalize}::#{service}ServiceClient.#{method}(#{params.map(&:to_s).join(", ")})"
      output << "        )"
      output << "      end"
      output << "    end"
      output << "  end"
      output << ""
    end
    output.pop
    output << "end"
    output << ""
  end
  output.pop
  output.join("\n")
%>
